---
- hosts: localhost
  become: yes
  gather_facts: yes
  tasks:
    - name: Set DPKG architecture
      set_fact:
        dpkg_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"
    - name: install vim
      ansible.builtin.apt:
        name: vim
        update_cache: yes
    - name: install curl
      ansible.builtin.apt:
        name: curl
        update_cache: yes
    - name: install apt-transport-https
      ansible.builtin.apt:
        name: apt-transport-https
        update_cache: yes
    - name: install git
      ansible.builtin.apt:
        name: git
        update_cache: yes
    - name: install wget
      ansible.builtin.apt:
        name: wget
        update_cache: yes
    - name: install software-properties-common
      ansible.builtin.apt:
        name: software-properties-common
        update_cache: yes
    - name: install lsb-release
      ansible.builtin.apt:
        name: lsb-release
        update_cache: yes
    - name: install ca-certificates
      ansible.builtin.apt:
        name: ca-certificates
        update_cache: yes
    - name: Disable swap for current session
      command: swapoff -a
    - name: load module overlay
      command: modprobe overlay
    - name: load module br_netfilter
      command: modprobe br_netfilter
    - name: ensure file /etc/sysctl.d/kubernetes.conf exists
      copy:
        content: ""
        dest: /etc/sysctl.d/kubernetes.conf
        force: false
        group: sys
        owner: root
        mode: 644
    - name: Add Kernel networking to allow necessary traffic at the end of file
      lineinfile:
        path: /etc/sysctl.d/kubernetes.conf
        line: 'net.bridge.bridge-nf-call-ip6tables = 1'
    - name: Add Kernel networking to allow necessary traffic at the end of file
      lineinfile:
        path: /etc/sysctl.d/kubernetes.conf
        line: 'net.bridge.bridge-nf-call-iptables = 1'
    - name: Add Kernel networking to allow necessary traffic at the end of file
      lineinfile:
        path: /etc/sysctl.d/kubernetes.conf
        line: 'net.ipv4.ip_forward = 1'
    - name: Ensure the change in /etc/sysctl.d/kubernetes.conf are used by the current kernel
      command: sysctl --system
      register: sysctl
    - debug:
        var: sysctl.stdout_lines
    - name: get sysctl output
      ansible.builtin.debug:
        var: sysctl
    - name: create dir keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
    - name: Add an APT signing key docker
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
    - name: create /etc/apt/source.list.d
      file:
        path: /etc/apt/source.list.d
        state: directory
    - name: create /etc/apt/source.list.d/docker.list
      copy:
        content: "deb [arch={{ dpkg_arch }} signed-by=/etc/apt/keyrings/docker.gpg]   https://download.docker.com/linux/ubuntu   {{ ansible_facts['lsb']['codename'] }} stable"
        dest: /etc/apt/sources.list.d/docker.list
        force: false
        group: root
        owner: root
        mode: 644 
    - name: apt get contained.io
      ansible.builtin.apt:
        update_cache: yes
        name: containerd.io
        state: present
    - name: config.toml containerd
      command: containerd config default | tee /etc/containerd/config.toml
    - name: replace false to true SystedCgroup in /etc/containerd/config.toml
      lineinfile:
        path: /etc/containerd/config.toml
        regex: 'SystemdCgroup = false'
        line: 'SystemdCgroup = true'
        state: present
    - name: restart containerd
      service:
        name: containerd
        state: restarted
    - name: create /etc/apt/sources.list.d/kubernetes.list
      copy:
        content: 'deb  http://apt.kubernetes.io/  kubernetes-xenial  main'
        dest: /etc/apt/sources.list.d/kubernetes.list
        group: sys
        owner: root
        mode: 644
    - name: Add APT signing key Google
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: apt get kubernetes
      ansible.builtin.apt:
        update_cache: yes
        name:
          - kubeadm=1.27.1-00
          - kubelet=1.27.1-00
          - kubectl=1.27.1-00
        state: present
    - name: apt hold
      command: apt-mark hold kubelet kubeadm kubectl
    - name: host add ip
      lineinfile:
        path: /etc/hosts
        line: '{{ ansible_default_ipv4.address }} k8scp'
    - name: config yaml kubeadm
      template:
        src: /root/kubercertif/kubeadm-config.j2
        dest: /root/kubeadm-config.yaml
        remote_src: yes
    - name: kube init
      shell: kubeadm init --config=/root/kubeadm-config.yaml --upload-certs
      register: kubeadmcommand
    - name: create cube init output file
      ansible.builtin.file:
        path: kubeadm.command.output
        mode: 644
    - name: save kubeadm command output to file
      ansible.builtin.copy:
        content: "{{ kubeadmcommand.sdtout }}"
        dest: kubeadm.command.output
